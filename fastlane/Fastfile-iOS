# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Bootstraps dependencies"
  lane :bootstrap do
    project_directory = sh "find .. -name Cartfile -not -path \"*Carthage/*\" -exec dirname {} \\; | tr -d '\n'"
    Dir.chdir(project_directory) do
      if File.readlines("Cartfile.private").grep(/Cuckoo/).size > 0
        sh "carthage checkout Cuckoo"
      end
      sh "rome download --platform iOS"
      sh "rome list --missing --platform iOS | awk '{print $1}' | xargs carthage bootstrap --platform iOS --cache-builds"
      sh "rome list --missing --platform iOS | awk '{print $1}' | xargs rome upload --platform iOS"
    end
  end

  desc "Runs SwiftLint"
  lane :lint do |options|
    swiftlint(
      mode: :lint,
      path: options[:project_directory],
      output_file: options[:project_directory] + "/swiftlint-results.xml",
      reporter: "checkstyle",
      config_file: ".swiftlint.yml"
    )
  end

  desc "Runs tests"
  lane :test do |options|
    clear_derived_data
    scan(workspace: get_main_workspace, scheme: options[:scheme], clean: true)
    Dir.chdir(options[:project_directory]) do
      sh "slather coverage"
    end
  end

  desc "Builds and archives the specified scheme"
  lane :archive do |options|
    gym(workspace: get_main_workspace, scheme: options[:scheme], skip_package_ipa: true)
  end

  desc "Publishes the SDK framework to Artifactory"
  lane :deploy_framework do |options|
    config_path = options[:config_path]
    framework_path = options[:framework_path]
    sh "curl https://raw.githubusercontent.com/aliaslab-1984/fastlane-utils/master/artifactory_publish.sh | bash -s -- -c \"#{config_path}\" -f \"#{framework_path}\""
  end

  desc "Rebuilds the framework and publishes it to Artifactory"
  lane :build_deploy_framework do |options|
    config_path = "../#{get_artifactory_config(config_name: options[:config_name])}"
    scheme = sh("cat \"#{config_path}\" | grep scheme | cut -d= -f2 | tr -d '\n'")
    archive_path = archive(scheme:scheme)
    deploy_framework(config_path:config_path, framework_path:archive_path + "/Products/Library/Frameworks")
  end

  private_lane :get_artifactory_config do |options|
    Dir.chdir("..") do
      sh "find . -name \"#{options[:config_name]}\" | tr -d '\n'"
    end
  end

  private_lane :get_main_workspace do
    Dir.chdir("..") do
      sh "find . -name \"*.xcworkspace\" -not -path \"*Carthage*\" -and -not -path \"*xcodeproj*\" | tr -d '\n'"
    end
  end
end
